/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

import type { Image, Audio, Pdf, Video } from "@boundaryml/baml"
/**
 * Recursively partial type that can be null.
 *
 * @deprecated Use types from the `partial_types` namespace instead, which provides type-safe partial implementations
 * @template T The type to make recursively partial.
 */
export type RecursivePartialNull<T> = T extends object
    ? { [P in keyof T]?: RecursivePartialNull<T[P]> }
    : T | null;

export interface Checked<T,CheckName extends string = string> {
    value: T,
    checks: Record<CheckName, Check>,
}

export interface Check {
    name: string,
    expr: string
    status: "succeeded" | "failed"
}

export function all_succeeded<CheckName extends string>(checks: Record<CheckName, Check>): boolean {
    return get_checks(checks).every(check => check.status === "succeeded")
}

export function get_checks<CheckName extends string>(checks: Record<CheckName, Check>): Check[] {
    return Object.values(checks)
}
export interface Avatar {
  summary: string
  apparent_age: string
  gender_presentation: string
  face_shape: string
  face_width: string
  jawline: string
  cheekbones: string
  chin_shape: string
  skin_tone: string
  skin_undertone: string
  complexion_details?: string | null
  hair_color: string
  hair_color_variation?: string | null
  hair_length: string
  hair_style: string
  hair_texture: string
  hair_volume: string
  hairline_shape: string
  hair_parting?: string | null
  eye_color: string
  eye_shape: string
  eye_size: string
  eye_spacing: string
  eyelash_visibility: string
  eyebrow_shape: string
  eyebrow_thickness: string
  eyebrow_color: string
  nose_shape: string
  nose_bridge: string
  nose_tip: string
  nose_width: string
  nostril_visibility: string
  lip_shape: string
  upper_lip_fullness: string
  lower_lip_fullness: string
  mouth_width: string
  cupids_bow: string
  facial_hair_type?: string | null
  facial_hair_style?: string | null
  facial_hair_density?: string | null
  facial_hair_color?: string | null
  glasses: boolean
  glasses_style?: string | null
  glasses_frame_color?: string | null
  glasses_lens_type?: string | null
  freckles: boolean
  freckle_intensity?: string | null
  beauty_marks?: string[] | null
  dimples?: string | null
  ear_size: string
  ear_prominence: string
  piercings?: string[] | null
  confidence: number
  avatar_style: string
  key_features: string[]
  
}

export interface BasicResponse {
  answer: string
  confidence: number
  
}

export interface DetailedResponse {
  answer: string
  confidence: number
  explanation?: string | null
  sources?: string[] | null
  
}

export interface Scene {
  main_description: string
  character_in_scene: string
  character_placement: string
  camera_angle: string
  shot_type: string
  setting: string
  background: string
  time_of_day: string
  mood: string
  color_palette: string
  lighting_style: string
  style_keywords: string[]
  quality_markers: string[]
  flux_prompt: string
  negative_prompt: string
  flux_guidance_scale: number
  flux_steps: number
  complexity_score: number
  avatar_integration: string
  key_elements: string[]
  
}
